name: Build and deploy mkdocs website

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  semver:
    name: Caluclate Version
    runs-on: ubuntu-latest
    outputs:
      semver: ${{ steps.semver.outputs.version_tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: semver
        uses: paulhatch/semantic-version@v5.3.0
        with:
          tag_prefix: "v"
          version_format: "${major}.${minor}.${patch}"

  build-mkdocs:
    name: Build mkdocs site
    needs: semver
    runs-on: ubuntu-latest
    outputs:
      built: ${{ steps.changes.outputs.project }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check for changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            project:
              - 'mkdocs/**'

      - name: Install python 3.x
        uses: actions/setup-python@v5
        if: steps.changes.outputs.project == 'true'
        with:
          python-version: 3.x

      - name: setup caching
        uses: actions/cache@v4
        if: steps.changes.outputs.project == 'true'
        with:
          key: mkdocs-material-${{ env.cache_id }}
          path: .cache
          restore-keys: |
            mkdocs-material-

      - name: Install pyhton modules
        run: pip install -r requirements.txt
        if: steps.changes.outputs.project == 'true'
        working-directory: ./mkdocs

      - name: MkDocs build
        run: mkdocs build
        if: steps.changes.outputs.project == 'true'
        working-directory: ./mkdocs

      - name: Upload site
        uses: actions/upload-artifact@v4
        if: steps.changes.outputs.project == 'true'
        with:
          name: mkdocs
          path: "mkdocs/site/*"
          if-no-files-found: error
          retention-days: 1

  build-hugo:
    name: Build hugo site
    needs: semver
    runs-on: ubuntu-latest
    outputs:
      built: ${{ steps.changes.outputs.project }}
    steps:
      - name: Checkpout
        uses: actions/checkout@v4

      - name: Check for changes
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            project:
              - 'hugo/**'

  deploy:
    name: Deploy adreasnow.com
    runs-on: ubuntu-latest
    needs:
      - semver
      - build-mkdocs
      - build-hugo
    steps:
      - uses: actions/checkout@v4
        with:
          ref: gh-pages

      # - run: |
      #     echo '<meta http-equiv="refresh" content="0; url=https://adreasnow.com/academic/" />' > index.html
      #     echo 'adreasnow.com' > CNAME

      - if: needs.build-mkdocs.outputs.built == 'true'
        run: rm -rf academic

      - if: needs.build-mkdocs.outputs.built == 'true'
        uses: actions/download-artifact@v4
        with:
          name: mkdocs
          path: academic

      - if: needs.build-hugo.outputs.built == 'true'
        run: rm -rf tech

      # - if: needs.build-hugo.outputs.built == 'true'
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: mkdocs
      #     path: tech

      # - if: needs.build-hugo.outputs.built == 'true'
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: hugo
      #     path: tech

      - name: Push the new site
        if: ${{ (needs.build-hugo.outputs.built == 'true') || (needs.build-mkdocs.outputs.built == 'true') }}
        run: |
          git config user.name "Adrea Snow"
          git config user.email adrea.snow@gmail.com
          git add .
          git commit -m ${{ needs.semver.outputs.semver }}
          git push

  tag:
    name: Tag the main branch
    runs-on: ubuntu-latest
    if: ${{ (needs.build-hugo.outputs.built == 'true') || (needs.build-mkdocs.outputs.built == 'true') }}
    needs:
      - semver
      - build-mkdocs
      - build-hugo
      - deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Tag the commit
        uses: actions/github-script@v7
        with:
          retries: 3
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ needs.semver.outputs.semver }}',
              sha: context.sha
            })
